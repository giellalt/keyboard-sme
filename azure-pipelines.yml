# This is an azure pipelines configuration generated by the script found at
# https://github.com/divvun/divvun-ci-config/azure/generate-keyboard.sh
# YOU SHOULD NOT EDIT THIS MANUALLY 
# Script commit 0bc1b6ce3f8ee2385d1a8f387aa23cbc656a2d22
# Generated on 20190521092945

trigger:
- master

jobs:
- job: 'macOS'
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
      addToPath: true
  - script: |
      set -e
      wget https://github.com/divvun/pahkat/releases/download/0.6.0/pahkat-macos -O pahkat
      chmod a+x pahkat
      curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
      git clone --branch feature/new-format https://github.com/divvun/kbdgen.git
      git clone https://github.com/divvun/divvun-ci-config.git
      cd divvun-ci-config
      sh ./install-macos.sh
    displayName: 'Install prerequisites'
    env:
      DIVVUN_KEY: $(divvunKey)
  - script: |
      set -e
      python -m venv $HOME/env/py3
      source $HOME/env/py3/bin/activate
      source $HOME/.poetry/env
      export "PATH=$PATH:$(System.DefaultWorkingDirectory)"
      cd kbdgen
      poetry install
      cd "../sme.kbdgen"
      export TARGET_BUNDLE_NAME=$(cat targets/mac.yaml | grep 'bundleName:' | cut -c 13-)
      export TARGET_VERSION=$(cat targets/mac.yaml | grep 'version:' | cut -c 10-)
      kbdgen -R -t mac --ci -o output --logging debug .
      cp "$(System.DefaultWorkingDirectory)/sme.kbdgen/output/$TARGET_BUNDLE_NAME $TARGET_VERSION.pkg" "$(System.DefaultWorkingDirectory)/sme.kbdgen/output/keyboard-sme.pkg"
      cd ..
      sh divvun-ci-config/repo/scripts/pahkat_deploy_svn.sh https://pahkat.uit.no/repo/macos-staging "$(System.DefaultWorkingDirectory)/sme.kbdgen/output/keyboard-sme.pkg" keyboard-sme $TARGET_VERSION
    displayName: 'Run kbdgen'
    env:
      DEPLOY_SVN_USER: $(svnUser)
      DEPLOY_SVN_PASSWORD: $(svnPassword)
      DEPLOY_SVN_COMMIT: $(svnCommit)
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(System.DefaultWorkingDirectory)/sme.kbdgen/output/keyboard-sme.pkg'
      artifactName: macos
- job: 'Windows'
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
      addToPath: true
  - bash: |
      set -e
      curl -sLo pahkat.exe https://github.com/divvun/pahkat/releases/download/0.6.0/pahkat.exe
      curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
      git clone --branch feature/new-format https://github.com/divvun/kbdgen.git
      git clone https://github.com/divvun/divvun-ci-config.git
      openssl aes-256-cbc -d -in ./divvun-ci-config/config.txz.enc -pass pass:$DIVVUN_KEY -out config.txz -md md5
      7z e config.txz
      tar xf config.tar
      curl -o 6aa798a39c.zip https://x.brendan.so/6aa798a39c.zip
      7z x 6aa798a39c.zip
    displayName: 'Install prerequisites'
    env:
      DIVVUN_KEY: $(divvunKey)
  - powershell: |
      . .\divvun-ci-config\repo\scripts\PahkatDeploySvn.ps1
      $Env:PATH += "$(System.DefaultWorkingDirectory);"
      $Env:PATH += $Env:USERPROFILE + "\.poetry\bin;"
      $Env:CODESIGN_PFX = "$(System.DefaultWorkingDirectory)\enc\creds\windows\divvun.pfx"
      $Env:MSKLC_PATH = "$(System.DefaultWorkingDirectory)\msklc1.4"
      $env:VIRTUAL_ENV_DISABLE_PROMPT="true"
      python -m venv $Env:USERPROFILE\env\py3
      Invoke-Expression -Command $Env:USERPROFILE\env\py3\Scripts\Activate.ps1
      cd kbdgen
      poetry install
      cd "..\sme.kbdgen"
      kbdgen -R -t win --ci -o output --logging debug .
      $appName = $(cat targets\win.yaml | Select-String -Pattern '^appName:.*').Matches[0].Value.Substring(8).Trim().Replace(" ", "_")
      $version = $(cat targets\win.yaml | Select-String -Pattern '^version:.*').Matches[0].Value.Substring(8).Trim()
      $sourcePath = "$(System.DefaultWorkingDirectory)\sme.kbdgen\output\"+$appName+"_"+$version+".exe"
      $sourcePathWin7 = "$(System.DefaultWorkingDirectory)\sme.kbdgen\output\"+$appName+"_"+$version+".win7.exe"
      Copy-Item $sourcePath "$(System.DefaultWorkingDirectory)\sme.kbdgen\output\keyboard-sme.exe"
      Copy-Item $sourcePathWin7 "$(System.DefaultWorkingDirectory)\sme.kbdgen\output\keyboard-sme.win7.exe"
      cd ..
      PahkatDeploySvn -SvnUrl https://pahkat.uit.no/repo/windows-staging -Artifact "$(System.DefaultWorkingDirectory)\sme.kbdgen\output\keyboard-sme.exe" -Package keyboard-sme -Version $version
    displayName: 'Run kbdgen'
    env:
      CODESIGN_PW: $(pfxPassword)
      DEPLOY_SVN_USER: $(svnUser)
      DEPLOY_SVN_PASSWORD: $(svnPassword)
      DEPLOY_SVN_COMMIT: $(svnCommit)
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(System.DefaultWorkingDirectory)/sme.kbdgen/output/keyboard-sme.exe'
      artifactName: windows
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(System.DefaultWorkingDirectory)/sme.kbdgen/output/keyboard-sme.win7.exe'
      artifactName: windows
- job: 'iOS'
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
      addToPath: true
  - script: |
      set -e
      curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
      curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y
      source $HOME/.cargo/env
      rustup target add aarch64-apple-ios
      rustup target add armv7-apple-ios
      rustup target add i386-apple-ios
      rustup target add x86_64-apple-ios
      cargo install cargo-lipo
      git clone --branch feature/new-format https://github.com/divvun/kbdgen.git
      git clone https://github.com/divvun/divvun-ci-config.git
      cd divvun-ci-config
      export TRAVIS_BUILD_DIR=$(System.DefaultWorkingDirectory)
      sh ./install.sh
      sh ./install-macos.sh
    displayName: 'Install prerequisites'
    env:
      DIVVUN_KEY: $(divvunKey)
  - script: |
      set -e
      export TRAVIS_BUILD_DIR=$(System.DefaultWorkingDirectory)
      source $HOME/.cargo/env
      python -m venv $HOME/env/py3
      source $HOME/env/py3/bin/activate
      source $HOME/.poetry/env
      source divvun-ci-config/enc/env.sh
      security default-keychain -s build.keychain
      security unlock-keychain -p travis build.keychain
      security set-keychain-settings -t 3600 -u build.keychain
      /bin/bash divvun-ci-config/repo/scripts/download_speller.sh https://apertium.projectjj.com/apt/nightly/pool/main/g/giella-sme/ sme.zhfst
      cd kbdgen
      poetry install
      cd "../sme.kbdgen"
      export TARGET_BUNDLE_NAME=$(cat targets/ios.yaml | grep 'bundleName:' | cut -c 13-)
      export TARGET_VERSION=$(cat targets/ios.yaml | grep 'version:' | cut -c 10-)
      kbdgen -R -t ios --ci -o output --github-username $GITHUB_USERNAME --github-token $GITHUB_TOKEN --logging debug .
    env:
      TEAM_ID: 2K5J2584NX
- job: 'Android'
  pool:
    vmImage: 'ubuntu-16.04'
  container: bitbleep/kbdgen-android:0.2
  steps:
  - script: |
      set -e
      curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python3
      curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y
      source $HOME/.cargo/env
      rustup target add aarch64-linux-android
      rustup target add armv7-linux-androideabi
      rustup target add i686-linux-android
      cargo install cargo-ndk
      git clone --branch feature/new-format https://github.com/divvun/kbdgen.git
      git clone https://github.com/divvun/divvun-ci-config.git
      cd divvun-ci-config
      openssl aes-256-cbc -d -in config.txz.enc -pass pass:$DIVVUN_KEY -md md5 | tar xfJ -
      cp -R enc/creds $HOME
    displayName: 'Install prerequisites'
    env:
      DIVVUN_KEY: $(divvunKey)
  - script: |
      set -e
      source $HOME/.cargo/env
      source $HOME/.poetry/env
      python3 -m venv $HOME/env/py3
      source $HOME/env/py3/bin/activate
      source divvun-ci-config/enc/env.sh
      /bin/bash divvun-ci-config/repo/scripts/download_speller.sh https://apertium.projectjj.com/apt/nightly/pool/main/g/giella-sme/ sme.zhfst
      cd kbdgen
      poetry install
      cd "../sme.kbdgen"
      export TARGET_BUNDLE_NAME=$(cat targets/android.yaml | grep 'bundleName:' | cut -c 13-)
      export TARGET_VERSION=$(cat targets/android.yaml | grep 'version:' | cut -c 10-)
      kbdgen -R -t android --ci -o output --github-username $GITHUB_USERNAME --github-token $GITHUB_TOKEN --logging debug .
      # todo: fix this when kbdgen naming works
      cp "$(System.DefaultWorkingDirectory)/sme.kbdgen/output/-"$TARGET_VERSION"_release.apk" "$(System.DefaultWorkingDirectory)/sme.kbdgen/output/keyboard-sme.apk"
    displayName: 'Run kbdgen'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(System.DefaultWorkingDirectory)/sme.kbdgen/output/keyboard-sme.apk'
      artifactName: android
